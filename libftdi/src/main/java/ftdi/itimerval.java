package ftdi;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * Type of the second argument to `getitimer' and<br>
 * the second and third arguments `setitimer'.<br>
 * <i>native declaration : /usr/include/sys/time.h:106</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class itimerval extends Structure {
	/**
	 * Value to put into `it_value' when the timer expires.<br>
	 * C type : timeval
	 */
	public timeval it_interval;
	/**
	 * Time to the next timer expiration.<br>
	 * C type : timeval
	 */
	public timeval it_value;
	public itimerval() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("it_interval", "it_value");
	}
	/**
	 * @param it_interval Value to put into `it_value' when the timer expires.<br>
	 * C type : timeval<br>
	 * @param it_value Time to the next timer expiration.<br>
	 * C type : timeval
	 */
	public itimerval(timeval it_interval, timeval it_value) {
		super();
		this.it_interval = it_interval;
		this.it_value = it_value;
	}
	public static class ByReference extends itimerval implements Structure.ByReference {
		
	};
	public static class ByValue extends itimerval implements Structure.ByValue {
		
	};
}

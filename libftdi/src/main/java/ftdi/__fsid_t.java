package ftdi;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /usr/include/bits/types.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class __fsid_t extends Structure {
	/** C type : int[2] */
	public int[] __val = new int[2];
	public __fsid_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("__val");
	}
	/** @param __val C type : int[2] */
	public __fsid_t(int __val[]) {
		super();
		if ((__val.length != this.__val.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__val = __val;
	}
	public static class ByReference extends __fsid_t implements Structure.ByReference {
		
	};
	public static class ByValue extends __fsid_t implements Structure.ByValue {
		
	};
}

package ftdi;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * Structure crudely representing a timezone.<br>
 * This is obsolete and should never be used.<br>
 * <i>native declaration : /usr/include/sys/time.h:54</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class timezone extends Structure {
	/** Minutes west of GMT. */
	public int tz_minuteswest;
	/** Nonzero if DST is ever in effect. */
	public int tz_dsttime;
	public timezone() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("tz_minuteswest", "tz_dsttime");
	}
	/**
	 * @param tz_minuteswest Minutes west of GMT.<br>
	 * @param tz_dsttime Nonzero if DST is ever in effect.
	 */
	public timezone(int tz_minuteswest, int tz_dsttime) {
		super();
		this.tz_minuteswest = tz_minuteswest;
		this.tz_dsttime = tz_dsttime;
	}
	public static class ByReference extends timezone implements Structure.ByReference {
		
	};
	public static class ByValue extends timezone implements Structure.ByValue {
		
	};
}
